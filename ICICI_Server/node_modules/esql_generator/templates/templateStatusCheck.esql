BROKER SCHEMA com.icici.xpress_connect.ecollection.acceptreject
DECLARE ACCOUNT_API_URL EXTERNAL CHARACTER 'ACCOUNT_API_URL';
DECLARE FILE_UPLOAD_DIRECTORY EXTERNAL CHARACTER 'FILE_UPLOAD_DIRECTORY';


CREATE COMPUTE MODULE Ecollection_LEND_File_To_JSON_CheckStatus
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ns1 NAMESPACE 'http://www.icici.com/xpress-connect/ecollection';
		DECLARE i INTEGER 1;
		DECLARE statusLength INTEGER 0;
		
		CREATE LASTCHILD OF Environment.Variables DOMAIN('JSON') NAME 'JSON';
		SET Environment.Variables.JSON.Data = InputRoot.JSON.Data;
		
		SET Environment.Variables.Status[] = Select * from Database.STATUS_MASTER;
		
		SET statusLength = CARDINALITY(Environment.Variables.Status[]);
		
		Reject : WHILE (i <= statusLength) DO
				
						IF( UPPER (InputRoot.JSON.Data.-- Change --) =UPPER( Environment.Variables.Status[i].FT_STATUS)) THEN
							
							SET OutputLocalEnvironment.Destination.HTTP.RequestLine.Method = 'GET';
		 					SET OutputLocalEnvironment.Destination.HTTP.RequestURL = ACCOUNT_API_URL||'CustomerCode='||Environment.Variables.DFDL.ns1:REL_Input.record.CustomerCode||'&VAN='||Environment.Variables.DFDL.ns1:REL_Input.record.VirtualAccountNumber||'&IA='||Environment.Variables.DFDL.ns1:REL_Input.record.SenderAccountNumber;
					
							PROPAGATE TO TERMINAL 'out1';
							LEAVE Reject;
							
						ELSEIF ( UPPER (InputRoot.JSON.Data.-- Change --) = UPPER(Environment.Variables.Status[i].REFUND_STATUS)) THEN
							
							CALL CopyEntireMessage();
							PROPAGATE TO TERMINAL 'out2';
							LEAVE Reject;
							
						END IF;
					SET i = i + 1;
					
				END WHILE;
		
			
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;