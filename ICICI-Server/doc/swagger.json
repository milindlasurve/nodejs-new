{
    "info": {
        "version": "v0.0.2",
        "title": "ICICI",
        "description": "To perform any operation, you will need to first generate an access token. \n Tokens are generated by invoking the `/auth` API. \n The response is as follows, `Bearer <access-token>`. \n Copy the response and append it to all subsequent APIs where `Authorization` is required."
    },
    "tags": [],
    "paths": {
        "/api/users/": {
            "get": {
                "summary": "This endpoint will get user details.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get data",
                        "schema": {
                            "$ref": "#/responses/getUser"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "Please enter maker approval status. (i.e. true/false )",
                        "name": "makerApproval",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "Please enter checker approval status. (i.e. true/false )",
                        "name": "checkerApproval",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "Please enter username",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/login": {
            "post": {
                "summary": "This endpoint will authenticate user.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/login"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/login"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/logout": {
            "post": {
                "summary": "This endpoint will expire session.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logout",
                        "schema": {
                            "$ref": "#/responses/logOut"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/register": {
            "post": {
                "summary": "This endpoint will add new user.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/userRegistration"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/userRegistration"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/": {
            "get": {
                "summary": "This endpoint will get user details.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get data",
                        "schema": {
                            "$ref": "#/responses/getUser"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "Please enter username.",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "tags": [
                    "User"
                ]
            },
            "put": {
                "summary": "This endpoint will update the existing user.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/updateUser"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/create": {
            "post": {
                "summary": "This endpoint will create.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/userRegistration"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/userRegistration"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/changePassword": {
            "post": {
                "summary": "This endpoint will change password.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated.",
                        "schema": {
                            "$ref": "#/responses/changePassword"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/changePassword"
                        },
                        "required": true,
                        "description": "",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/approveByMaker": {
            "post": {
                "summary": "This endpoint will approve the user by maker role.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated.",
                        "schema": {
                            "$ref": "#/responses/approveByMaker"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/approveByMaker"
                        },
                        "required": true,
                        "description": "",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/approveByChecker": {
            "post": {
                "summary": "This endpoint will approve the user by checker role.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated.",
                        "schema": {
                            "$ref": "#/responses/approveByMaker"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/approveByChecker"
                        },
                        "required": true,
                        "description": "",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/forgetPassword": {
            "put": {
                "summary": "This endpoint will update password.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/updatePassword"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/updatePassword"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/deleteUser": {
            "delete": {
                "summary": "This endpoint will delete user.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/deleteUser"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "No Description.",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/user/getUsersFTUC": {
            "get": {
                "summary": "This endpoint will get user details.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get data",
                        "schema": {
                            "$ref": "#/responses/getUser"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "Please enter FTUC value. (i.e. false )",
                        "name": "FTUC",
                        "in": "query"
                    }
                ],
                "tags": [
                    "User"
                ]
            }
        },
        "/api/project/": {
            "post": {
                "summary": "This endpoint will create project.",
                "description": "Create project.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created.",
                        "schema": {
                            "$ref": "#/responses/createProject"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/createProject"
                        },
                        "required": true,
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "get": {
                "summary": "This endpoint will get all the project details.",
                "description": "Project is an individual or collaborative enterprise and is the first and the utmost important component of the Application. This is where a procedure starts from. A Project interprets the name, version and instills a few actions. Name must be carefully planned to achieve a particular aim and it can be edited. There are actions like navigating to Products, navigating to Flows, editing the name & version, there is also a provision of Uploading Data which can be in the form of a WSDL/YAML/JSON file or URL or WSDL/YAML/JSON text. A version should be edited when its particular form which differs in respect to previous form. We can also afford to delete a project through actions. A Project can have multiple Products but only one Flow. This endpoint will create a project. Project is having project name, version and timestamp.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/responses/getProject"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "",
                        "name": "projectId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "put": {
                "summary": "This endpoint will update project status.",
                "description": "Project is an individual or collaborative enterprise and is the first and the utmost important component of the Application. This is where a procedure starts from. A Project interprets the name, version and instills a few actions. Name must be carefully planned to achieve a particular aim and it can be edited. There are actions like navigating to Products, navigating to Flows, editing the name & version, there is also a provision of Uploading Data which can be in the form of a WSDL/YAML/JSON file or URL or WSDL/YAML/JSON text. A version should be edited when its particular form which differs in respect to previous form. We can also afford to delete a project through actions. A Project can have multiple Products but only one Flow. This endpoint will create a project. Project is having project name, version and timestamp.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/responses/createProject"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/updateProjectStatus"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "delete": {
                "summary": "This endpoint will get the project details by projectId.",
                "description": "Project is an individual or collaborative enterprise and is the first and the utmost important component of the Application. This is where a procedure starts from. A Project interprets the name, version and instills a few actions. Name must be carefully planned to achieve a particular aim and it can be edited. There are actions like navigating to Products, navigating to Flows, editing the name & version, there is also a provision of Uploading Data which can be in the form of a WSDL/YAML/JSON file or URL or WSDL/YAML/JSON text. A version should be edited when its particular form which differs in respect to previous form. We can also afford to delete a project through actions. A Project can have multiple Products but only one Flow. This endpoint will update the project. Project is having project name, version and timestamp.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/responses/getProject"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "",
                        "name": "projectId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/api/project/getAudit": {
            "get": {
                "summary": "This endpoint will get audit of the project.",
                "description": "A project is the second part of the Application. It is the catalogue of possessions of a Project. It is the sub-part of Project and can be navigated through Project. A Product like Projects engenders name, version and actions. Name is of the product and its version depicts the times its constructed. The actions include navigating to Flows, navigating to Services , arranges for Uploading Data which can be in the form of a WSDL/YAML/JSON file or URL or WSDL/YAML/JSON text. We can also delete a product through actions. A Project can assimilate only one flow and have multiple multiple Services.\nThis endpoint will get product by product Id.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/getProject"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "",
                        "name": "projectId",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "createdBy",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/api/project/initiateUAT": {
            "post": {
                "summary": "This endpoint will create project.",
                "description": "Create project.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created.",
                        "schema": {
                            "$ref": "#/responses/createProject"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/initiateUAT"
                        },
                        "required": true,
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/api/project/initiateSIT": {
            "post": {
                "summary": "This endpoint will initiate SIT.",
                "description": "initiate SIT.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created.",
                        "schema": {
                            "$ref": "#/responses/createProject"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/initiateSIT"
                        },
                        "required": true,
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/api/product/": {
            "post": {
                "summary": "This endpoint will create product.",
                "description": "A Product is the second part of the Application. It is the catalogue of possessions of a Project. It is the sub-part of Project and can be navigated through Project. A Product like Projects engenders name, version and actions. Name is of the product and its version depicts the times its constructed. The actions include navigating to Flows, navigating to Services , arranges for Uploading Data which can be in the form of a WSDL/YAML/JSON file or URL or WSDL/YAML/JSON text. We can also delete a product through actions. A Project can assimilate only one flow and have multiple multiple Services. \nThis endpoint will create product.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created.",
                        "schema": {
                            "$ref": "#/responses/createProduct"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "name": "productName",
                        "in": "query",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "tags": [
                    "Product"
                ]
            },
            "get": {
                "summary": "This endpoint will get product.",
                "description": "A Product is the second part of the Application. It is the catalogue of possessions of a Project. It is the sub-part of Project and can be navigated through Project. A Product like Projects engenders name, version and actions. Name is of the product and its version depicts the times its constructed. The actions include navigating to Flows, navigating to Services , arranges for Uploading Data which can be in the form of a WSDL/YAML/JSON file or URL or WSDL/YAML/JSON text. We can also delete a product through actions. A Project can assimilate only one flow and have multiple multiple Services.\nThis endpoint will get product.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/getProduct"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "",
                        "name": "productId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Product"
                ]
            },
            "put": {
                "summary": "This endpoint will update product.",
                "description": "A Product is the second part of the Application. It is the catalogue of possessions of a Project. It is the sub-part of Project and can be navigated through Project. A Product like Projects engenders name, version and actions. Name is of the product and its version depicts the times its constructed. The actions include navigating to Flows, navigating to Services , arranges for Uploading Data which can be in the form of a WSDL/YAML/JSON file or URL or WSDL/YAML/JSON text. We can also delete a product through actions. A Project can assimilate only one flow and have multiple multiple Services.\nThis endpoint will update product.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated",
                        "schema": {
                            "$ref": "#/responses/updateProduct"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/updateProduct"
                        },
                        "required": true,
                        "description": "",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "Product"
                ]
            },
            "delete": {
                "summary": "This endpoint will delete product.",
                "description": "A Product is the second part of the Application. It is the catalogue of possessions of a Project. It is the sub-part of Project and can be navigated through Project. A Product like Projects engenders name, version and actions. Name is of the product and its version depicts the times its constructed. The actions include navigating to Flows, navigating to Services , arranges for Uploading Data which can be in the form of a WSDL/YAML/JSON file or URL or WSDL/YAML/JSON text. We can also delete a product through actions. A Project can assimilate only one flow and have multiple multiple Services.\nThis endpoint will delete product.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/deleteProduct"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "",
                        "name": "productId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Product"
                ]
            }
        },
        "/api/service/": {
            "post": {
                "summary": "This endpoint will create a service.",
                "description": "Flows imbue Sequence Diagrams.  A sequence diagram shows object interactions arranged in time sequence. It depicts the objects and classes involved in the scenario and the sequence of messages exchanged between the objects needed to carry out the functionality of the scenario. Sequence diagrams are typically associated with use case realizations in the logical-view of the system under development. Sequence diagrams are sometimes called event diagrams or event scenarios. A sequence diagram shows, as parallel vertical lines (lifelines), different processes or objects that live simultaneously, and, as horizontal arrows, the messages exchanged between them, in the order in which they occur. This allows the specification of simple runtime scenarios in a graphical manner. Multiple flows can be added to a Project but only one flow can be selected per Project or Product. A Flow can be navigated through Project and Product.\nThis endpoint will create a flow.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/createService"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "name": "serviceName",
                        "in": "query",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "tags": [
                    "Business Process Integration Implementation"
                ]
            },
            "get": {
                "summary": "This endpoint will get services.",
                "description": "Flows imbue Sequence Diagrams. A sequence diagram shows object interactions arranged in time sequence. It depicts the objects and classes involved in the scenario and the sequence of messages exchanged between the objects needed to carry out the functionality of the scenario. Sequence diagrams are typically associated with use case realizations in the logical-view of the system under development. Sequence diagrams are sometimes called event diagrams or event scenarios. A sequence diagram shows, as parallel vertical lines (lifelines), different processes or objects that live simultaneously, and, as horizontal arrows, the messages exchanged between them, in the order in which they occur. This allows the specification of simple runtime scenarios in a graphical manner. Multiple flows can be added to a Project but only one flow can be selected per Project or Product. A Flow can be navigated through Project and Product.\nThis endpoint will get flows.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/getFlow"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "",
                        "name": "serviceId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Business Process Integration Implementation"
                ]
            },
            "put": {
                "summary": "This endpoint will update service.",
                "description": "Flows imbue Sequence Diagrams. A sequence diagram shows object interactions arranged in time sequence. It depicts the objects and classes involved in the scenario and the sequence of messages exchanged between the objects needed to carry out the functionality of the scenario. Sequence diagrams are typically associated with use case realizations in the logical-view of the system under development. Sequence diagrams are sometimes called event diagrams or event scenarios. A sequence diagram shows, as parallel vertical lines (lifelines), different processes or objects that live simultaneously, and, as horizontal arrows, the messages exchanged between them, in the order in which they occur. This allows the specification of simple runtime scenarios in a graphical manner. Multiple flows can be added to a Project but only one flow can be selected per Project or Product. A Flow can be navigated through Project and Product.\nThis endpoint will update flow.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated",
                        "schema": {
                            "$ref": "#/responses/updateFlow"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "query",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "serviceName",
                        "in": "query",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "",
                        "required": true
                    }
                ],
                "tags": [
                    "Business Process Integration Implementation"
                ]
            },
            "delete": {
                "summary": "This endpoint will delete service.",
                "description": "Flows imbue Sequence Diagrams. A sequence diagram shows object interactions arranged in time sequence. It depicts the objects and classes involved in the scenario and the sequence of messages exchanged between the objects needed to carry out the functionality of the scenario. Sequence diagrams are typically associated with use case realizations in the logical-view of the system under development. Sequence diagrams are sometimes called event diagrams or event scenarios. A sequence diagram shows, as parallel vertical lines (lifelines), different processes or objects that live simultaneously, and, as horizontal arrows, the messages exchanged between them, in the order in which they occur. This allows the specification of simple runtime scenarios in a graphical manner. Multiple flows can be added to a Project but only one flow can be selected per Project or Product. A Flow can be navigated through Project and Product.\nThis endpoint will delete flow.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/deleteFlow"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "",
                        "name": "flowId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Business Process Integration Implementation"
                ]
            }
        },
        "/api/service/file": {
            "get": {
                "summary": "This endpoint will get Image.",
                "description": "Flows imbue Sequence Diagrams.  A sequence diagram shows object interactions arranged in time sequence. It depicts the objects and classes involved in the scenario and the sequence of messages exchanged between the objects needed to carry out the functionality of the scenario. Sequence diagrams are typically associated with use case realizations in the logical-view of the system under development. Sequence diagrams are sometimes called event diagrams or event scenarios. A sequence diagram shows, as parallel vertical lines (lifelines), different processes or objects that live simultaneously, and, as horizontal arrows, the messages exchanged between them, in the order in which they occur. This allows the specification of simple runtime scenarios in a graphical manner. Multiple flows can be added to a Project but only one flow can be selected per Project or Product. A Flow can be navigated through Project and Product.\nThis endpoint will get Image.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/getImage"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "",
                        "name": "flowId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Flow"
                ]
            }
        },
        "/api/ping/": {
            "post": {
                "summary": "This endpoint will check api status.",
                "description": "This endpoint will check api status.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/getAPI"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/checkAPI"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "Ping API"
                ]
            },
            "get": {
                "summary": "This function will read test.txt file from github and send back to UI.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get data",
                        "schema": {
                            "$ref": "#/responses/getUser"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "Please enter service name",
                        "name": "serviceName",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "Please enter client code",
                        "name": "clientCode",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Ping API"
                ]
            }
        },
        "/api/file/": {
            "post": {
                "summary": "This endpoint will upload file.",
                "description": "This endpoint will upload file. After that, will read the file using document-reader npm module and store file object in database. ",
                "operationId": "uploadFile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/uploadFile"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file to upload",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "projectId",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "orgName",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "OtherFiles",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "directory",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Document"
                ]
            },
            "get": {
                "summary": "This endpoint will read file data.",
                "description": "This will get file object from database for mapping.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/getFileData"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "",
                        "name": "projectId",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "flowId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Document"
                ]
            }
        },
        "/api/file/get": {
            "get": {
                "summary": "This endpoint will read file data.",
                "description": "This will get file object from database for mapping.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/getFileData"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "",
                        "name": "projectId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Document"
                ]
            }
        },
        "/api/file/upload_files": {
            "post": {
                "summary": "This endpoint will upload multiple files.",
                "description": "This endpoint will upload multiple files.",
                "operationId": "uploadFiles",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/uploadFile"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file to upload",
                        "required": false,
                        "allowMultiple": true,
                        "type": "file"
                    },
                    {
                        "required": false,
                        "description": "other files to upload",
                        "name": "OtherFiles",
                        "in": "formData",
                        "type": "file"
                    }
                ],
                "tags": [
                    "Multiple_Upload"
                ]
            }
        },
        "/api/file/yaml": {
            "post": {
                "summary": "This endpoint will create YAML file.",
                "description": "This will upload file and creates a yaml for api-connect devlopment.",
                "operationId": "uploadFile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/uploadFile"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file to upload",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "params",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "fileName",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "orgName",
                        "in": "query"
                    }
                ],
                "tags": [
                    "YAML Creation"
                ]
            }
        },
        "/api/file/ui/yaml": {
            "post": {
                "summary": "This endpoint will create YAML file.",
                "description": "This will upload file and creates a yaml for api-connect devlopment.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/uploadFile"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/createYAML"
                        },
                        "required": true,
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "YAML Creation"
                ]
            }
        },
        "/api/file/esql": {
            "post": {
                "summary": "This endpoint will create ESQL file.",
                "description": "This will uplaod file and creates a eqsl for ACE devlopment.",
                "operationId": "uploadFile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/uploadFile"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file to upload",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "mappedObj",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "fileName",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "clientName",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "description": "",
                        "name": "orgName",
                        "in": "query"
                    }
                ],
                "tags": [
                    "ESQL Creation"
                ]
            }
        },
        "/api/file/ui/esql": {
            "post": {
                "summary": "This endpoint will create ESQL file.",
                "description": "This will uplaod file and creates a eqsl for ACE devlopment.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/responses/uploadFile"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/createESQL"
                        },
                        "required": true,
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "ESQL Creation"
                ]
            }
        },
        "/api/accountdetails/": {
            "get": {
                "summary": "This endpoint will get user's account details.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get data",
                        "schema": {
                            "$ref": "#/responses/getAccountDeatils"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "Please enter customer code.",
                        "name": "CustomerCode",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "description": "Please enter VAN.",
                        "name": "VAN",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "description": "Please enter IA.",
                        "name": "IA",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Account Details"
                ]
            }
        },
        "/api/mappingdata/source": {
            "get": {
                "summary": "This endpoint will get user details.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get data",
                        "schema": {
                            "$ref": "#/responses/getMappingData"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "You will get data based on template name.",
                        "name": "templateName",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Mapping Data"
                ]
            },
            "post": {
                "summary": "This endpoint will save template data in the database.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/addMappingData"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/addSourceData"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "Mapping Data"
                ]
            }
        },
        "/api/mappingdata/": {
            "get": {
                "summary": "This endpoint will get mapping details from the database.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get data",
                        "schema": {
                            "$ref": "#/responses/getMappingData"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "required": false,
                        "description": "You will get data based on project Id.",
                        "name": "projectId",
                        "in": "query"
                    }
                ],
                "tags": [
                    "Mapping Data"
                ]
            },
            "post": {
                "summary": "This endpoint will save mapping data in the database.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/responses/addMappingData"
                        },
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "type": "string",
                                "description": "URI that may access the resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/addMappingData"
                        },
                        "required": true,
                        "description": "No Description.",
                        "name": "body",
                        "in": "body"
                    }
                ],
                "tags": [
                    "Mapping Data"
                ]
            }
        },
        "/api/branch/": {
            "get": {
                "tags": [
                    "Branch Locator"
                ],
                "summary": "Locates a bank branch.",
                "description": "Bank branch information is searched for using IFSC code, Postal Address, Coordinates, Radius.",
                "operationId": "opLocateBranch",
                "parameters": [
                    {
                        "name": "ifsc",
                        "in": "query",
                        "description": "IFSC code is a unique eleven-digit number which is a combination of alphabets and numerals. It is used to transfer funds online for NEFT, IMPS and RTGS transactions. Usually, the IFSC code can be found on the cheque-book provided by the bank. It can also be found on the front page of the account-holders passbook. The IFSC code of each bank branch is assigned by the Reserve Bank of India.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "postal-address",
                        "in": "query",
                        "description": "Address line (e.g. name of the street).",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "pipes"
                    },
                    {
                        "name": "state-code",
                        "in": "query",
                        "description": "State code.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "postal-code",
                        "in": "query",
                        "description": "Postal code.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country-code",
                        "in": "query",
                        "description": "Country code.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Radius in metres.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank branches that match the given search values.",
                        "schema": {
                            "$ref": "#/definitions/BranchList"
                        }
                    }
                },
                "x-swagger-router-controller": "BranchLocator"
            },
            "post": {
                "tags": [
                    "Branch Locator"
                ],
                "summary": "Adds a new bank branch.",
                "description": "Adds a new bank branch.",
                "operationId": "opAddBranch",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "New bank branch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Branch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-swagger-router-controller": "BranchLocator"
            }
        }
    },
    "parameters": {},
    "securityDefinitions": {
        "access_token": {
            "description": "Authorization For Transaction APIs",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "login": {
            "required": [
                "username",
                "password"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Enter user name.",
                    "format": "string"
                },
                "password": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                }
            }
        },
        "userRegistration": {
            "required": [],
            "properties": {
                "organisationName": {
                    "type": "string",
                    "description": "Enter user name.",
                    "format": "string"
                },
                "vanNo": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "IFSCCode": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "accountNumber": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "creditAccountNumber": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "businessSpocName": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "businessSpocEmails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "businessSpocEmail": {
                                "type": "string",
                                "description": "Set Name as (tenure, penal interest, grace period, etc.)"
                            }
                        }
                    },
                    "description": "List of Terms and conditions for the disbursal.",
                    "format": "string"
                },
                "businessSpocMobileNumber": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "ITSpocName": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "ITSpocEmails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "ITSpocEmail": {
                                "type": "string",
                                "description": "Set Name as (tenure, penal interest, grace period, etc.)"
                            }
                        }
                    },
                    "description": "List of Terms and conditions for the disbursal.",
                    "format": "string"
                },
                "ITSpocMobileNumber": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "webService": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "uatPublicIP": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "uatPortNo": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "livePublicIP": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "livePortNo": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                }
            }
        },
        "changePassword": {
            "required": [
                "username",
                "oldPassword",
                "newPassword",
                "confirmPassword"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "oldPassword": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "newPassword": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "confirmPassword": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                }
            }
        },
        "updatePassword": {
            "required": [
                "username",
                "newPassword",
                "confirmPassword"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "newPassword": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "confirmPassword": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                }
            }
        },
        "approveByMaker": {
            "required": [],
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "Enter project ID. ",
                    "format": "string"
                },
                "makerApproval": {
                    "type": "string",
                    "description": "Enter approval status (true/false). ",
                    "format": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                },
                "createdBy": {
                    "type": "string",
                    "description": "Enter createdBy (i.e. username).",
                    "format": "string"
                },
                "orgName": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                }
            }
        },
        "approveByChecker": {
            "required": [],
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "Enter project ID. ",
                    "format": "string"
                },
                "repoName": {
                    "type": "string",
                    "description": "Enter repo name (Ex. ProjectName). ",
                    "format": "string"
                },
                "checkerApproval": {
                    "type": "string",
                    "description": "Enter approval status (true/false). ",
                    "format": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                },
                "createdBy": {
                    "type": "string",
                    "description": "Enter createdBy (i.e. username).",
                    "format": "string"
                },
                "orgName": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                }
            }
        },
        "updateUser": {
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Enter user name.",
                    "format": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "lastName": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "mobileNumber": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "email": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                }
            }
        },
        "createProject": {
            "type": "object",
            "required": [
                "productId",
                "photoUrls"
            ],
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "productId": {
                                "type": "string",
                                "description": "Set Name as (tenure, penal interest, grace period, etc.)"
                            },
                            "services": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "serviceId": {
                                            "type": "string",
                                            "description": "Set Name as (tenure, penal interest, grace period, etc.)"
                                        }
                                    }
                                },
                                "description": "List of Terms and conditions for the disbursal.",
                                "format": "string"
                            }
                        }
                    },
                    "description": "List of Terms and conditions for the disbursal.",
                    "format": "string"
                },
                "productName": {
                    "type": "string",
                    "description": "Enter product name.",
                    "format": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                },
                "orgName": {
                    "type": "string",
                    "description": "Enter org name.",
                    "format": "string"
                }
            }
        },
        "updateProjectStatus": {
            "type": "object",
            "required": [
                "productId",
                "photoUrls"
            ],
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "Enter projectId.",
                    "format": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Enter status.",
                    "format": "string"
                },
                "event": {
                    "type": "string",
                    "description": "Enter event.",
                    "format": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                },
                "orgName": {
                    "type": "string",
                    "description": "Enter org name.",
                    "format": "string"
                }
            }
        },
        "updateProduct": {
            "required": [
                "productName",
                "description"
            ],
            "properties": {
                "productId": {
                    "type": "string",
                    "description": "Enter product Id.",
                    "format": "string"
                },
                "productName": {
                    "type": "string",
                    "description": "Enter product name.",
                    "format": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Enter product description.",
                    "format": "string"
                }
            }
        },
        "updateProjectId": {
            "properties": {
                "flowId": {
                    "type": "string",
                    "description": "Enter flowId.",
                    "format": "string"
                },
                "projectId": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enter projectId.",
                    "format": "string"
                }
            }
        },
        "checkAPI": {
            "properties": {
                "URL": {
                    "type": "string",
                    "description": "Enter URL.",
                    "format": "string"
                },
                "method": {
                    "type": "string",
                    "description": "Enter method.",
                    "format": "string"
                }
            }
        },
        "addFileData": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "Enter projectId.",
                    "format": "string"
                },
                "productName": {
                    "type": "string",
                    "description": "Enter productName.",
                    "format": "string"
                }
            }
        },
        "createESQL": {
            "properties": {
                "mappedObj": {
                    "type": "string",
                    "description": "Enter mappedObj.",
                    "format": "string"
                },
                "fileName": {
                    "type": "string",
                    "description": "Enter fileName.",
                    "format": "string"
                },
                "clientName": {
                    "type": "string",
                    "description": "Enter clientName.",
                    "format": "string"
                },
                "clientCode": {
                    "type": "string",
                    "description": "Enter clientCode.",
                    "format": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                },
                "orgName": {
                    "type": "string",
                    "description": "Enter orgName.",
                    "format": "string"
                },
                "productName": {
                    "type": "string",
                    "description": "Enter productName.",
                    "format": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Enter serviceName.",
                    "format": "string"
                },
                "projectId": {
                    "type": "string",
                    "description": "Enter projectId.",
                    "format": "string"
                },
                "fileCount": {
                    "type": "number",
                    "description": "Enter file count.",
                    "format": "string"
                }
            }
        },
        "createYAML": {
            "properties": {
                "params": {
                    "type": "string",
                    "description": "Enter params.",
                    "format": "string"
                },
                "templateName": {
                    "type": "string",
                    "description": "Enter template's File Name.",
                    "format": "string"
                },
                "fileName": {
                    "type": "string",
                    "description": "Enter fileName.",
                    "format": "string"
                },
                "projectId": {
                    "type": "string",
                    "description": "Enter projectId.",
                    "format": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Enter username.",
                    "format": "string"
                },
                "orgName": {
                    "type": "string",
                    "description": "Enter orgName.",
                    "format": "string"
                }
            }
        },
        "getAccountDetails": {
            "properties": {
                "CustomerCode": {
                    "type": "string",
                    "description": "Enter CustomerCode.",
                    "format": "string"
                },
                "VAN": {
                    "type": "string",
                    "description": "Enter VAN.",
                    "format": "string"
                },
                "IA": {
                    "type": "string",
                    "description": "Enter IA.",
                    "format": "string"
                }
            }
        },
        "addMappingData": {
            "properties": {
                "mappingObj": {
                    "type": "string",
                    "description": "Enter mapping object.",
                    "format": "string"
                },
                "projectId": {
                    "type": "string",
                    "description": "Enter Project id.",
                    "format": "string"
                }
            }
        },
        "addSourceData": {
            "properties": {
                "templateName": {
                    "type": "string",
                    "description": "Enter template name.",
                    "format": "string"
                },
                "request": {
                    "type": "string",
                    "description": "Enter request object.",
                    "format": "string"
                },
                "response": {
                    "type": "string",
                    "description": "Enter response object.",
                    "format": "string"
                }
            }
        },
        "initiateUAT": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "Enter project id",
                    "format": "string"
                },
                "clientCode": {
                    "type": "string",
                    "description": "Enter client code",
                    "format": "string"
                },
                "productName": {
                    "type": "string",
                    "description": "Enter product name",
                    "format": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Enter service name",
                    "format": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Enter user name.",
                    "format": "string"
                },
                "orgName": {
                    "type": "string",
                    "description": "Enter org name.",
                    "format": "string"
                }
            }
        },
        "initiateSIT": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "Enter project id",
                    "format": "string"
                },
                "clientCode": {
                    "type": "string",
                    "description": "Enter client code",
                    "format": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Enter service name",
                    "format": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Enter user name.",
                    "format": "string"
                },
                "orgName": {
                    "type": "string",
                    "description": "Enter org name.",
                    "format": "string"
                }
            }
        },
        "addIFSCCode": {
            "properties": {
                "IFSC": {
                    "type": "string",
                    "description": "Enter project id",
                    "format": "string"
                },
                "lat": {
                    "type": "string",
                    "description": "Enter client code",
                    "format": "string"
                },
                "long": {
                    "type": "string",
                    "description": "Enter service name",
                    "format": "string"
                }
            }
        },
        "BranchList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Branch"
            }
        },
        "Branch": {
            "type": "object",
            "required": [
                "branchId",
                "ifsc",
                "postal-address"
            ],
            "properties": {
                "branchId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Branch Id."
                },
                "ifsc": {
                    "type": "string",
                    "example": "ICIC0000032",
                    "description": "IFSC code is a unique eleven-digit number which is a combination of alphabets and numerals. It is used to transfer funds online for NEFT, IMPS and RTGS transactions. Usually, the IFSC code can be found on the cheque-book provided by the bank. It can also be found on the front page of the account-holders passbook. The IFSC code of each bank branch is assigned by the Reserve Bank of India.",
                    "minLength": 11,
                    "maxLength": 11
                },
                "postal-address": {
                    "$ref": "#/definitions/PostalAddress"
                },
                "coords": {
                    "$ref": "#/definitions/Branch_coords"
                }
            },
            "example": {
                "branchId": "0000323",
                "ifsc": "ICIC0000323",
                "postal-address": {
                    "addressId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "address-line": [
                        {
                            "seq-no": 1,
                            "addr-ln": "Trade World, B Wing, Kamla Mill Compound"
                        },
                        {
                            "seq-no": 2,
                            "addr-ln": "Senapati Bapat Marg"
                        }
                    ],
                    "csd": [
                        {
                            "csd-name": "Lower Parel",
                            "csd-type-cd": "suburb"
                        },
                        {
                            "csd-name": "Mumbai",
                            "csd-type-cd": "city"
                        },
                        {
                            "csd-cd": "MH",
                            "csd-name": "Maharashtra",
                            "csd-type-cd": "state"
                        }
                    ],
                    "postal-cd": "400013",
                    "country-cd": "IN"
                },
                "coords": {
                    "x-coord": 19.0124038,
                    "y-coord": 72.8258423
                }
            }
        },
        "PostalAddress": {
            "type": "object",
            "required": [
                "address-line",
                "addressId",
                "country-cd",
                "csd",
                "postal-cd"
            ],
            "properties": {
                "addressId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Postal address Id."
                },
                "address-line": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PostalAddress_addressline"
                    }
                },
                "csd": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PostalAddress_csd"
                    }
                },
                "postal-cd": {
                    "type": "string",
                    "example": "400001",
                    "description": "Postal code",
                    "pattern": "[0-9]{6}"
                },
                "country-cd": {
                    "type": "string",
                    "example": "IN",
                    "description": "ISO 3166-2 country code."
                },
                "contact-details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContactDetails"
                    }
                }
            },
            "example": {
                "addressId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "address-line": [
                    {
                        "seq-no": 1,
                        "addr-ln": "TCG Financial Centre, C-53"
                    },
                    {
                        "seq-no": 2,
                        "addr-ln": "G Block, Bandra Kurla Complex"
                    }
                ],
                "csd": [
                    {
                        "csd-name": "Bandra (E)",
                        "csd-type-cd": "suburb"
                    },
                    {
                        "csd-name": "Mumbai",
                        "csd-type-cd": "city"
                    },
                    {
                        "csd-cd": "MH",
                        "csd-name": "Maharashtra",
                        "csd-type-cd": "state"
                    }
                ],
                "postal-cd": "400051",
                "country-cd": "IN"
            }
        },
        "Branch_coords": {
            "type": "object",
            "required": [
                "x-coord",
                "y-coord"
            ],
            "properties": {
                "x-coord": {
                    "type": "number"
                },
                "y-coord": {
                    "type": "number"
                }
            }
        },
        "PostalAddress_addressline": {
            "type": "object",
            "required": [
                "addr-ln"
            ],
            "properties": {
                "seq-no": {
                    "type": "integer"
                },
                "addr-ln": {
                    "type": "string"
                }
            }
        },
        "PostalAddress_csd": {
            "type": "object",
            "required": [
                "csd-name",
                "csd-type-cd"
            ],
            "properties": {
                "csd-cd": {
                    "type": "string",
                    "example": "MH"
                },
                "csd-name": {
                    "type": "string",
                    "example": "Maharashtra"
                },
                "csd-type-cd": {
                    "type": "string",
                    "example": "Mumbai",
                    "enum": [
                        "suburb",
                        "city",
                        "district",
                        "state"
                    ]
                }
            }
        },
        "ContactDetails": {
            "type": "object",
            "required": [
                "contact-no"
            ],
            "properties": {
                "contact-no": {
                    "type": "string",
                    "description": "Contact Number.",
                    "example": "+91-9810003010"
                },
                "contact-no-fmt": {
                    "type": "string",
                    "description": "Contact Number Format. Regular expression to parse the contact number.",
                    "example": "+[0-9]{2}-[0-9]{10}"
                }
            }
        }
    },
    "responses": {
        "getUser": {
            "required": [],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Enter user name.",
                    "format": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "lastName": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "mobileNumber": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                },
                "email": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                }
            }
        },
        "login": {
            "required": [],
            "properties": {
                "token": {
                    "type": "string",
                    "description": "You will get token.",
                    "format": "string"
                }
            }
        },
        "logOut": {
            "required": [],
            "properties": {
                "token": {
                    "type": "string",
                    "description": "",
                    "format": "string"
                }
            }
        },
        "userRegistration": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "changePassword": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "updatePassword": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "updateUser": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "deleteUser": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "createProject": {
            "required": [],
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "You will get project Id.",
                    "format": "string"
                },
                "projectName": {
                    "type": "string",
                    "description": "You will get project name.",
                    "format": "string"
                },
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "updateProject": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "createProduct": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "getProduct": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "updateProduct": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "deleteProduct": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "updateService": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "createService": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "getFlow": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "updateFlow": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "deleteFlow": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "getImage": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "updateProjectId": {
            "required": [],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "You will get message.",
                    "format": "string"
                }
            }
        },
        "getFileData": {
            "required": [],
            "properties": {
                "json": {
                    "type": "string",
                    "description": "You will get json.",
                    "format": "string"
                }
            }
        },
        "getAccountDeatils": {
            "required": [],
            "properties": {
                "CustomerCode": {
                    "type": "string",
                    "description": "You will customer code.",
                    "format": "string"
                },
                "VAN": {
                    "type": "string",
                    "description": "You will VAN.",
                    "format": "string"
                },
                "IA": {
                    "type": "string",
                    "description": "You will IA.",
                    "format": "string"
                },
                "CA": {
                    "type": "string",
                    "description": "You will CA code.",
                    "format": "string"
                },
                "IFSC": {
                    "type": "string",
                    "description": "You will IFSC code.",
                    "format": "string"
                }
            }
        },
        "addSourceData": {}
    },
    "error": {
        "buildTransaction": {
            "required": [],
            "properties": {
                "userName": {
                    "type": "string",
                    "description": "your unique username.",
                    "format": "string"
                }
            }
        }
    },
    "security": [
        {
            "access_token": []
        }
    ],
    "swagger": "2.0"
}
